// This example requires the Visualization library. Include the libraries=visualization
// parameter when you first load the API. For example:
// <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=visualization">


var map, points;


function initMap() {

    var myData = processPoints();

    var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 2,
        center: {lat: 0, lng: 0},
        mapTypeId: google.maps.MapTypeId.SATELLITE
    });

    var icon_concert = {
        url: "<%= asset_path 'c_concertneu.png' %>", // url
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_concertpos = {
        url: "<%= asset_path 'c_concertpos.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_concertneg = {
        url: "<%= asset_path 'c_concertneg.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_run = {
        url: "<%= asset_path 'c_runneu.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_runpos = {
        url: "<%= asset_path 'c_runpos.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_runneg = {
        url: "<%= asset_path 'c_runneg.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_party = {
        url: "<%= asset_path 'c_partyneu.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_partypos = {
        url: "<%= asset_path 'c_partypos.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_partyneg = {
        url: "<%= asset_path 'c_partyneg.png' %>", // url
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_trip = {
        url: "<%= asset_path 'c_tripneu.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_trippos = {
        url: "<%= asset_path 'c_trippos.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };
    var icon_tripneg = {
        url: "<%= asset_path 'c_tripneg.png' %>",
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };

    //var lowerbound = -1, upperbound = 1, posbound = 0.3, negbound = -0.3;
    for (var i=0;i<myData.length;i++){
        if (myData[i].tweettype == "concert") {
            //var lambda = 1;
            if (myData[i].sentiment == "negative") {
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_concertneg,
                    animation: google.maps.Animation.DROP
                });
            }
            else if(myData[i].sentiment == "positive"){
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_concertpos,
                    animation: google.maps.Animation.DROP
                });
            }
            else {
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_concert,
                    animation: google.maps.Animation.DROP
                });
            }
        }
        else if (myData[i].tweettype == "party") {
            //var lambda = 1;
            if (myData[i].sentiment == "negative") {
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_partyneg,
                    animation: google.maps.Animation.DROP
                });
            }
            else if(myData[i].sentiment == "positive"){
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_partypos,
                    animation: google.maps.Animation.DROP
                });
            }
            else {
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_party,
                    animation: google.maps.Animation.DROP
                });
            }
        }
        else if (myData[i].tweettype == "running") {
            //var lambda = 1;
            if (myData[i].sentiment == "negative") {
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_runneg,
                    animation: google.maps.Animation.DROP
                });
            }
            else if(myData[i].sentiment == "positive"){
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_runpos,
                    animation: google.maps.Animation.DROP
                });
            }
            else {
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_run,
                    animation: google.maps.Animation.DROP
                });
            }
        }
        else if (myData[i].tweettype == "trip") {
            var lambda = 1;
            if (myData[i].sentiment == "negative") {
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_tripneg,
                    animation: google.maps.Animation.DROP
                });
            }
            else if(myData[i].sentiment == "positive"){
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_trippos,
                    animation: google.maps.Animation.DROP
                });
            }
            else {
                var marker = new google.maps.Marker({
                    position: myData[i].LatLng,
                    map: map,
                    title: myData[i].tweet,
                    icon: icon_trip,
                    animation: google.maps.Animation.DROP
                });
            }
        }

        //marker.addListener('click', toggleBounce);
    }
    /*function toggleBounce() {
     if (marker.getAnimation() !== null) {
     marker.setAnimation(null);
     } else {
     marker.setAnimation(google.maps.Animation.BOUNCE);
     }
     }*/

}


function processPoints() {
    var result = new Array();
    console.log(points);
    for (var i = 0 ; i < points.length; i++){
        var tmp = {
            tweettype: points[i]["_type"],
            sentiment: points[i]["_source"]["sentiment"]["type"],
            LatLng: {lat: points[i]["_source"]["geo"]["coordinates"][1], lng: points[i]["_source"]["geo"]["coordinates"][0]},
            tweet: points[i]["_source"]["tweet"]
        };
        result[i] = tmp;
    }

    return result;
}



// Heatmap data: 500 Points
function getPoints() {
    var deferred = $.Deferred();
    // ref: http://stackoverflow.com/questions/15360393/force-code-to-execute-after-another-method-finishes-executing

    /* data format: getJSON[geometry]*/
    $.getJSON('json?keyword='+field, function(data) {
        points = [];
        $.each( data, function( key, val ) { // key == geo
            val.forEach(function(coord) {
                points.push(new google.maps.LatLng(coord['coordinates'][1], coord['coordinates'][0]));
            })
        });
        deferred.resolve();
    });
    return deferred;
}
